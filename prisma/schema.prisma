generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String     @id @default(cuid())
  email           String     @unique
  username        String
  avatar          String?
  password        String?
  createdWith     String
  refreshToken    String?
  profileSettings Json?
  telegram        String?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  orders          Order[]
  cart            CartItem[]
}

model CartItem {
  id        Int @id @default(autoincrement())
  productId Int
  itemId    Int
  count     Int

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, productId, itemId])
}

model Product {
  id       Int           @id @default(autoincrement())
  name     String
  category String
  image    String
  price    Json
  items    ProductItem[]
}

model ProductItem {
  id           Int     @id @default(autoincrement())
  name         String
  availability Int
  productId    Int
  product      Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Order {
  id              String   @id @default(cuid())
  userId          String
  items           Json
  status          String
  trackNumber     String?
  deliveryAddress String
  createdAt       DateTime @default(now())
  logs            Log[]
  user            User     @relation(fields: [userId], references: [id])
}

model Log {
  id        String   @id @default(cuid())
  orderId   String
  actor     String
  action    String
  timestamp DateTime @default(now())
  order     Order    @relation(fields: [orderId], references: [id])
}

model Admin {
  id       String @id @default(cuid())
  login    String @unique
  password String
}

model Manager {
  id       String @id @default(cuid())
  login    String @unique
  password String
}

model Assembler {
  id       String @id @default(cuid())
  login    String @unique
  password String
}
